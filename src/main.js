// Point d'entr√©e principal temporaire - Version de d√©bogage
// Imports CSS et modules comment√©s temporairement pour isoler le probl√®me

console.log('üîç D√âBOGAGE: Application Mondes Immerg√©s en cours de chargement...');

/**
 * Fonction principale d'initialisation temporaire
 */
function initialize() {
    console.log('üîç D√âBOGAGE: Initialisation temporaire...');
    
    // Test basique - juste afficher le contenu
    const mainContainer = document.getElementById('main-container');
    const loadingScreen = document.getElementById('loading-screen');
    
    if (loadingScreen) {
        loadingScreen.style.display = 'none';
    }
    
    if (mainContainer) {
        mainContainer.style.display = 'block';
        mainContainer.style.opacity = '1';
        mainContainer.classList.remove('hidden');
    }
    
    // Ajouter un message de d√©bogage
    const debugMessage = document.createElement('div');
    debugMessage.innerHTML = `
        <div style="position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); 
                    color: white; font-family: 'Roboto Mono', monospace; text-align: center;
                    background: rgba(0,0,0,0.8); padding: 20px; border-radius: 10px;">
            <h2>üîç MODE D√âBOGAGE</h2>
            <p>Application charg√©e sans modules</p>
            <p>CSS et JS modules d√©sactiv√©s temporairement</p>
            <p>Si vous voyez ce message, le probl√®me vient d'un des modules import√©s</p>
        </div>
    `;
    
    if (mainContainer) {
        mainContainer.appendChild(debugMessage);
    }
    
    console.log('üîç D√âBOGAGE: Initialisation termin√©e - application basique fonctionnelle');
}

// S'assurer que le DOM est compl√®tement charg√© avant d'initialiser
document.addEventListener('DOMContentLoaded', () => {
    console.log('üîç D√âBOGAGE: DOM charg√©, d√©marrage de l\'initialisation...');
    initialize();
});

// Test du curseur personnalis√© basique
function initCustomCursor() {
    console.log('üîç D√âBOGAGE: Initialisation curseur...');
    const cursor = document.querySelector('.cursor');
    const follower = document.querySelector('.cursor-follower');

    if (!cursor || !follower) {
        console.log('üîç D√âBOGAGE: √âl√©ments de curseur non trouv√©s');
        return;
    }

    document.addEventListener('mousemove', e => {
        const x = e.clientX;
        const y = e.clientY;
        cursor.style.left = `${x}px`;
        cursor.style.top = `${y}px`;
        follower.style.left = `${x}px`;
        follower.style.top = `${y}px`;
    });
    
    console.log('üîç D√âBOGAGE: Curseur initialis√©');
}

// Appeler apr√®s le chargement
window.addEventListener("load", function () {
    initCustomCursor();
});
